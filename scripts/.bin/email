#!/usr/bin/env python3
"""
opens a .eml file in thunderbird for sending
"""
from __future__ import annotations
import argparse
import re
import os
import subprocess as sp


def parse_headers(file: io.TextIOBase):
    headers = {}
    for line in file:
        line = line.strip()

        if line == '':
            break

        key, value = re.split(r':\s*', line, maxsplit=1)

        if key in headers:
            headers[key] += ', ' + value
        else:
            headers[key] = value
    return headers


def send_email(file: io.TextIOBase):
    headers = parse_headers(file)
    body = file.read()
    if body.endswith('\n'):
        body = body[:-1]


    supported = ['to', 'cc', 'bcc', 'subject', 'attachment', 'newsgroups', 'format', 'from']
    tb_options = {}

    for k, v in headers.items():
        k = k.lower()
        if k.lower() not in supported:
            continue
        tb_options[k] = v

    unsupported = [k for k in headers.keys() if k.lower() not in tb_options]
    for unsup in unsupported:
        print(f'[WARN] unrecognized header: "{unsup}"')

    tb_options['body'] = body
    cli_options = ','.join(f"{k}='{v}'" for k, v in tb_options.items())
    sp.check_call(['thunderbird', '-compose', cli_options])


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("file", type=argparse.FileType('r'), nargs='+', help='.eml file for sending')
    args = parser.parse_args()
    files = args.file

    for file in files:
        cwd = os.getcwd()
        os.chdir(os.path.dirname(file.name))
        send_email(file)
        os.chdir(cwd)
